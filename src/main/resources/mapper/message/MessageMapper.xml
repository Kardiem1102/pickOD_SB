<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smbt.pickod.mapper.message.MessageMapper">
    <select id="showGetMailList" parameterType="Long" resultType="GetMailListDTO">
        SELECT MS.MSG_READ, M_SENDER.MEMBER_NICKNAME, MSG.MSG_CONTENT, MSG.MSG_SENT_TIME
        FROM MESSAGE MSG
        JOIN MESSAGE_STATUS MS ON MSG.MSG_ID = MS.MSG_ID
        JOIN MEMBER M_SENDER ON MSG.MSG_SENDER = M_SENDER.MEMBER_NUM
        WHERE MS.MSG_BOX = 'I'
        AND MSG.MSG_RECIPIENT = #{memberNum}
    </select>

    <select id="showSentMailList" parameterType="Long" resultType="SentMailListDTO">
        SELECT MS.MSG_READ, M_SENDER.MEMBER_NICKNAME, MSG.MSG_CONTENT, MSG.MSG_SENT_TIME
        FROM MESSAGE MSG
        JOIN MESSAGE_STATUS MS ON MSG.MSG_ID = MS.MSG_ID
        JOIN MEMBER M_RECIPIENT ON MSG.MSG_RECIPIENT = M_RECIPIENT.MEMBER_NUM
        WHERE MS.MSG_BOX = 'S'
        AND MSG.MSG_SENDER = #{memberNum}
    </select>

    <select id="getMailView" parameterType="GetMailViewDTO" resultType="GetMailViewDTO">
        SELECT M.MEMBER_NICKNAME, MSG.MSG_CONTENT
        FROM MESSAGE MSG
        JOIN MESSAGE_STATUS MS ON MSG.MSG_ID = MS.MSG_ID
        JOIN MEMBER M ON MSG.MSG_SENDER = M.MEMBER_NUM
        WHERE MS.MSG_BOX = 'I'
            AND MSG.MSG_ID = #{msgId}
            AND MSG.MSG_RECIPIENT = #{memberNum}
    </select>

    <select id="sentMailView" parameterType="SentMailViewDTO" resultType="SentMailViewDTO">
        SELECT M.MEMBER_NICKNAME, MSG.MSG_CONTENT
        FROM MESSAGE MSG
        JOIN MESSAGE_STATUS MS ON MSG.MSG_ID = MS.MSG_ID
        JOIN MEMBER M ON MSG.MSG_RECIPIENT = M.MEMBER_NUM
        WHERE MS.MSG_BOX = 'S'
          AND MSG.MSG_ID = #{msgId}
          AND MSG.MSG_SENDER = #{memberNum}
    </select>

    <select id="trashedMailList" parameterType="Long" resultType="TrashedMailListDTO">
        SELECT MS.MSG_READ, M_SENDER.MEMBER_NICKNAME, M_RECIPIENT.MEMBER_NICKNAME, MSG.MSG_CONTENT, MSG.MSG_SENT_TIME
        FROM MESSAGE MSG
        JOIN MESSAGE_STATUS MS ON MSG.MSG_ID = MS.MSG_ID
        JOIN MEMBER M_SENDER ON MSG.MSG_SENDER = M_SENDER.MEMBER_NUM
        JOIN MEMBER M_RECIPIENT ON MSG.MSG_RECIPIENT = M_RECIPIENT.MEMBER_NUM
        WHERE MS.MSG_BOX = 'T'
        AND (MSG.MSG_SENDER = #{memberNum} OR MSG.MSG_RECIPIENT = #{memberNum})
    </select>

    <select id="trashedMailView" parameterType="TrashedMailListDTO" resultType="TrashedMailViewDTO">
        SELECT M.MEMBER_NICKNAME, MSG.MSG_CONTENT
        FROM MESSAGE_STATUS MS
        JOIN MESSAGE MSG ON MS.MSG_ID = MSG.MSG_ID
        JOIN MEMBER M ON MSG.MSG_RECIPIENT = M.MEMBER_NUM
        WHERE MS.MSG_ID = #{msgId}
          AND MS.MSG_BOX = 'T'
          AND MS.MEMBER_NUM = #{memberNum}
    </select>

    <insert id="writeMail" parameterType="WriteMailDTO">
        <selectKey keyProperty="msgId" resultType="Long" order="BEFORE">
            SELECT SEQ_MESSAGE.nextVal FROM DUAL
        </selectKey>
            INSERT INTO MESSAGE ( MSG_ID, MSG_SENDER, MSG_RECIPIENT, MSG_CONTENT, MSG_SENT_TIME)
            VALUES (#{msgId}, #{msgSender}, #{msgRecipient}, #{msgContent}, SYSDATE)

        <selectKey keyProperty="statusId" resultType="Long" order="BEFORE">
            SELECT SEQ_MESSAGE_STATUS.nextVal FROM DUAL
        </selectKey>
            INSERT INTO MESSAGE_STATUS (STATUS_ID, MSG_ID, MEMBER_NUM, MSG_BOX, MSG_READ, MSG_TRASHED_DATE)
            VALUES (#{statusId}, (SELECT MAX(MSG_ID) FROM MESSAGE), #{msgSender}, 'S', 0 , NULL)
    </insert>

    <update id="getMailToBin" parameterType="MailToBinDTO">
        UPDATE MESSAGE_STATUS
        SET MSG_BOX = 'T', MSG_TRASHED_DATE = SYSDATE
        WHERE MSG_ID = #{msgId}
          AND MSG_BOX = 'I'
          AND MEMBER_NUM = #{memberNum}
    </update>

    <update id="sentMailToBin" parameterType="MailToBinDTO">
        UPDATE MESSAGE_STATUS
        SET MSG_BOX = 'T', MSG_TRASHED_DATE = SYSDATE
        WHERE MSG_ID = #{msgId}
          AND MSG_BOX = 'S'
          AND MEMBER_NUM = #{memberNum}
    </update>

    <update id="binToMailBox" parameterType="BinToMailBoxDTO">
        UPDATE MESSAGE_STATUS MS
        SET MS.MSG_BOX = CASE
                             WHEN M.MSG_SENDER = #{memberNum} THEN 'S'
                             WHEN M.MSG_RECIPIENT = #{memberNum} THEN 'I'
                         END,
            MS.MSG_TRASHED_DATE = NULL
        FROM MESSAGE M
        WHERE MS.MSG_ID = M.MSG_ID
          AND MS.MSG_ID = #{msgId}
          AND MS.MSG_TRASHED_DATE IS NOT NULL;
    </update>

    <delete id="removeMail" parameterType="Long">
        DELETE FROM MESSAGE_STATUS
        WHERE MSG_ID = #{msgId}
          AND MSG_TRASHED_DATE IS NOT NULL;
    </delete>
</mapper>