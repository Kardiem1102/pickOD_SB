<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smbt.pickod.mapper.admin.AdmMemberMgmtMapper">

    <!-- 전체 멤버 가져오는것 - 기본 회원 관리 페이지 -->
    <select id="getMembers" resultType="AdmMemberMgmtDTO">
        SELECT
            m.member_num,
            m.member_id,
            m.member_nickname,
            COUNT(DISTINCT j.JNL_NUM) AS tot_journals,
            COUNT(DISTINCT p.plan_id) AS tot_plans,
            s.sanction_cnt
        FROM
            MEMBER m
                LEFT JOIN PLAN p ON m.member_num = p.member_num
                LEFT JOIN JOURNAL j ON m.member_num = j.member_num
                LEFT JOIN SANCTION s ON m.member_num = s.member_num
        WHERE
            m.member_num >= 2
        GROUP BY
            m.member_num, m.member_id, m.member_nickname, s.sanction_cnt, m.MEMBER_NUM
        ORDER BY
            m.member_num
    </select>

    <!-- 검색을 해서 특정 회원들만 불러온 것 (회원 관리 페이지) -->
    <select id="filterMembers" parameterType="AdmMemberFilterDTO" resultType="AdmMemberMgmtDTO">

        SELECT
        m.member_num,
        m.member_id,
        m.member_nickname,
        COUNT(DISTINCT j.jnl_num) AS tot_journals,
        COUNT(DISTINCT p.plan_id) AS tot_plans,
        s.sanction_cnt
        FROM
        MEMBER m
        LEFT JOIN PLAN p ON m.member_num = p.member_num
        LEFT JOIN JOURNAL j ON m.member_num = j.member_num
        LEFT JOIN SANCTION s ON m.member_num = s.member_num
        WHERE
        1 = 1
        <if test="searchOption == '닉네임' and keyword != null and keyword != ''">
            AND m.member_nickname = #{keyword}
        </if>
        <if test="searchOption == '제재' and keyword != null and keyword != ''">
            AND s.sanction_cnt = #{keyword}
        </if>
        <if test="status == '정상'">
            AND (s.sanction_cnt IS NULL OR s.sanction_cnt = 0)
        </if>
        <if test="status == '제재'">
            <![CDATA[ AND  s.sanction_end_date > SYSDATE ]]>
        </if>
        GROUP BY
        m.member_num, m.member_id, m.member_nickname, s.sanction_cnt, m.member_num
        ORDER BY
        m.member_num ASC

    </select>

    <!-- 회원Id을 가지고 memberNum 가져오기 -->
    <select id="getMemNum" parameterType="String" resultType="Long">
        SELECT member_num
        FROM MEMBER
        WHERE MEMBER_ID = #{memberId}
    </select>

    <!-- memberNum을 매개변수로 넣어서 해당 회원 상세 정보 불러오기 -->
    <select id="getMemDetails" parameterType="Long" resultType="AdmMemberDetailsDTO">
    <![CDATA[
        SELECT
            m.member_num,
            m.member_id,
            m.member_nickname,
            m.member_address,
            m.member_bdate,
            m.member_gender,
            COUNT(DISTINCT j.JNL_NUM) AS tot_journals,
            COUNT(DISTINCT p.plan_id) AS tot_plans,
            s.sanction_cnt,
            CASE WHEN s.sanction_start_date <= SYSDATE AND s.sanction_end_date >= SYSDATE THEN 'Y' ELSE 'N' END AS is_banned,
            CASE WHEN s.sanction_end_date > SYSDATE THEN TO_CHAR(s.sanction_end_date, 'YYYY-MM-DD') ELSE '0' END AS sanction_end_date
        FROM
            MEMBER m
                LEFT JOIN PLAN p ON m.member_num = p.member_num
                LEFT JOIN JOURNAL j ON m.member_num = j.member_num
                LEFT JOIN SANCTION s ON m.member_num = s.member_num
        WHERE
            m.member_num = #{memberNum}
        GROUP BY
            m.member_num,
            m.member_id,
            m.member_nickname,
            m.member_address,
            m.member_bdate,
            m.member_gender,
            s.sanction_cnt,
            CASE WHEN s.sanction_start_date <= SYSDATE AND s.sanction_end_date >= SYSDATE THEN 'Y' ELSE 'N' END,
            CASE WHEN s.sanction_end_date > SYSDATE THEN TO_CHAR(s.sanction_end_date, 'YYYY-MM-DD') ELSE '0' END
        ]]>
    </select>

    <!-- 특정 회원을 제재 대상으로 가져오기 -->
    <select id="memToSanction" parameterType="String" resultType="AdmToSanctionDTO">
        SELECT member_id
        FROM member
        WHERE member_id = #{memberId}
    </select>

    <!-- 회원 삭제 -->
    <delete id="deleteMember" parameterType="AdmMemberDeleteDTO">
        DELETE FROM MEMBER
        WHERE member_num = #{memberNum}
    </delete>

</mapper>
